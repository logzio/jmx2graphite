name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '*' # Push events to matching *, i.e. 1.0, 20.15.10

jobs:
  build:
    name: Release Binaries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Determine version
        run: version=`echo '${{ github.ref }}' | cut -f2 -d 'v'`; echo '::set-output name=VERSION::$version'
        id: determine-version
      - name: Set version
        run: mvn versions:set -DnewVersion=${{ steps.determine-version.outputs.VERSION }}
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Upload binaries to GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/*.jar
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
             logzio/jmx2graphite:latest
             logzio/jmx2graphite:${{ steps.determine-version.outputs.VERSION }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
